## GENERAL CONFIGURATION
# not used in terraform module, but useful for admin activity
export AWS_ACCOUNT_ID="123456790"
export AWS_DEFAULT_REGION="us-east-1"
export CLUSTER_ROLE_NAME="AWSRoleForEKS"
export NODE_ROLE_NAME="AmazonEKSNodeRole"
export EC2_ROLE_NAME=""
export EKS_CLUSTER_NAME="automation-library-cluster"
export CERTIFICATE_ID="arn:aws:acm:${AWS_DEFAULT_REGION}:${AWS_ACCOUNT_ID}:certificate/xxxx"
export HOSTED_ZONE_ID="xxxx"
export DOMAIN="xxxx.xxxx"

## TERRAFORM CONFIGURATION
### These variables actually affect the Terraform deployment
# Role ARNS
export TF_VAR_cluster_role_arn="arn:aws:iam::${AWS_ACCOUNT_ID}:role/${CLUSTER_ROLE_NAME}"
export TF_VAR_node_role_arn="arn:aws:iam::${AWS_ACCOUNT_ID}:role/${NODE_ROLE_NAME}"
export TF_VAR_bastion_role_arn="arn:aws:iam::${AWS_ACCOUNT_ID}:role/${EC2_ROLE_NAME}"
    # NOTE: bastion_role_arn is not needed, only bastion_role_name.
    #       I left it here because not being able to input the arn
    #       for all roles annoys me. It would be nice to standarize
    #       the role input for the Terraform module, so you only input
    #       either names or ARNs, not a mixture...
    #       So, basically, TODO.
export TF_VAR_bastion_role_name="AWSRoleForEKS"
# VPC Config
export TF_VAR_vpc_id="vpc-xxxx"
export TF_VAR_public_subnet_ids='["subnet-xxxx","subnet-xxxx"]'
export TF_VAR_subnet_ids='["subnet-xxxx","subnet-xxxx"]'
# IPs that are whitelisted for ingress into the bastion host.
export TF_VAR_source_ips='["x.x.x.x/xx"]'